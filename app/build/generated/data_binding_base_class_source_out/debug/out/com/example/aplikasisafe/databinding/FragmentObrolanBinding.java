// Generated by view binder compiler. Do not edit!
package com.example.aplikasisafe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aplikasisafe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentObrolanBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout barMenu1;

  @NonNull
  public final ImageButton buttonPindah;

  @NonNull
  public final RecyclerView recyleview;

  @NonNull
  public final TextView teksPt0;

  private FragmentObrolanBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout barMenu1,
      @NonNull ImageButton buttonPindah, @NonNull RecyclerView recyleview,
      @NonNull TextView teksPt0) {
    this.rootView = rootView;
    this.barMenu1 = barMenu1;
    this.buttonPindah = buttonPindah;
    this.recyleview = recyleview;
    this.teksPt0 = teksPt0;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentObrolanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentObrolanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_obrolan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentObrolanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bar_menu1;
      LinearLayout barMenu1 = ViewBindings.findChildViewById(rootView, id);
      if (barMenu1 == null) {
        break missingId;
      }

      id = R.id.buttonPindah;
      ImageButton buttonPindah = ViewBindings.findChildViewById(rootView, id);
      if (buttonPindah == null) {
        break missingId;
      }

      id = R.id.recyleview;
      RecyclerView recyleview = ViewBindings.findChildViewById(rootView, id);
      if (recyleview == null) {
        break missingId;
      }

      id = R.id.teks_pt0;
      TextView teksPt0 = ViewBindings.findChildViewById(rootView, id);
      if (teksPt0 == null) {
        break missingId;
      }

      return new FragmentObrolanBinding((ConstraintLayout) rootView, barMenu1, buttonPindah,
          recyleview, teksPt0);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
