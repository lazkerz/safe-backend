// Generated by view binder compiler. Do not edit!
package com.example.aplikasisafe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aplikasisafe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView bgProfile;

  @NonNull
  public final ImageButton detailProfile;

  @NonNull
  public final ImageButton out;

  @NonNull
  public final ImageView profile;

  @NonNull
  public final TextView txtProfile;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView bgProfile,
      @NonNull ImageButton detailProfile, @NonNull ImageButton out, @NonNull ImageView profile,
      @NonNull TextView txtProfile) {
    this.rootView = rootView;
    this.bgProfile = bgProfile;
    this.detailProfile = detailProfile;
    this.out = out;
    this.profile = profile;
    this.txtProfile = txtProfile;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bg_profile;
      ImageView bgProfile = ViewBindings.findChildViewById(rootView, id);
      if (bgProfile == null) {
        break missingId;
      }

      id = R.id.detail_profile;
      ImageButton detailProfile = ViewBindings.findChildViewById(rootView, id);
      if (detailProfile == null) {
        break missingId;
      }

      id = R.id.out;
      ImageButton out = ViewBindings.findChildViewById(rootView, id);
      if (out == null) {
        break missingId;
      }

      id = R.id.profile;
      ImageView profile = ViewBindings.findChildViewById(rootView, id);
      if (profile == null) {
        break missingId;
      }

      id = R.id.txt_profile;
      TextView txtProfile = ViewBindings.findChildViewById(rootView, id);
      if (txtProfile == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, bgProfile, detailProfile, out,
          profile, txtProfile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
