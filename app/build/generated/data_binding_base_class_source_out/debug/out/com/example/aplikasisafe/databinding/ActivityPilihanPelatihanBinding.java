// Generated by view binder compiler. Do not edit!
package com.example.aplikasisafe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aplikasisafe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPilihanPelatihanBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backPilihanPelatihan;

  @NonNull
  public final LinearLayout barTemaPelatihan;

  @NonNull
  public final AppCompatButton btnKategori;

  @NonNull
  public final AppCompatButton btnPelatihan1;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final RecyclerView materiRecyclerView;

  private ActivityPilihanPelatihanBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backPilihanPelatihan, @NonNull LinearLayout barTemaPelatihan,
      @NonNull AppCompatButton btnKategori, @NonNull AppCompatButton btnPelatihan1,
      @NonNull LinearLayout linearLayout2, @NonNull RecyclerView materiRecyclerView) {
    this.rootView = rootView;
    this.backPilihanPelatihan = backPilihanPelatihan;
    this.barTemaPelatihan = barTemaPelatihan;
    this.btnKategori = btnKategori;
    this.btnPelatihan1 = btnPelatihan1;
    this.linearLayout2 = linearLayout2;
    this.materiRecyclerView = materiRecyclerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPilihanPelatihanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPilihanPelatihanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pilihan_pelatihan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPilihanPelatihanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backPilihanPelatihan;
      ImageButton backPilihanPelatihan = ViewBindings.findChildViewById(rootView, id);
      if (backPilihanPelatihan == null) {
        break missingId;
      }

      id = R.id.bar_temaPelatihan;
      LinearLayout barTemaPelatihan = ViewBindings.findChildViewById(rootView, id);
      if (barTemaPelatihan == null) {
        break missingId;
      }

      id = R.id.btnKategori;
      AppCompatButton btnKategori = ViewBindings.findChildViewById(rootView, id);
      if (btnKategori == null) {
        break missingId;
      }

      id = R.id.btn_pelatihan1;
      AppCompatButton btnPelatihan1 = ViewBindings.findChildViewById(rootView, id);
      if (btnPelatihan1 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.materiRecyclerView;
      RecyclerView materiRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (materiRecyclerView == null) {
        break missingId;
      }

      return new ActivityPilihanPelatihanBinding((ConstraintLayout) rootView, backPilihanPelatihan,
          barTemaPelatihan, btnKategori, btnPelatihan1, linearLayout2, materiRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
